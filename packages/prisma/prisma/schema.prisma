// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model users {
    id                String    @id @default(cuid())
    name              String    @unique // set from mal
    mal_id            Int       @unique
    mal_access_token  String    @db.MediumText
    mal_refresh_token String    @db.MediumText()
    picture           String
    created_at        DateTime  @default(now())
    updated_at        DateTime  @default(now())
    deleted_at        DateTime?
    list_last_update  DateTime  @default(now())

    sessions    sessions[]
    anime_users anime_users[]
}

enum Status {
    WATCHING
    COMPLETED
    PLAN_TO_WATCH
    DROPPED
    ON_HOLD
}

enum AiringStatus {
    FINISHED
    RELEASING
    NOT_YET_RELEASED
    CANCELLED
    HIATUS
}

model animes {
    id            Int          @unique
    english_title String?
    romaji_title  String
    status        AiringStatus

    picture    String
    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    season      String?
    season_year Int?

    anime_users  anime_users[]
    series       anime_series[] @relation(name: "series")
    series_anime anime_series[] @relation(name: "anime")
}

enum Relation {
    ADAPTATION
    PREQUEL
    SEQUEL
    PARENT
    SIDE_STORY
    CHARACTER
    SUMMARY
    ALTERNATIVE
    SPIN_OFF
    OTHER
    SOURCE
    COMPILATION
    CONTAINS
}

// Used for relations between animes
// Direct relations between animes
// Season one is a prequel to season two
// Season two is a sequel to season one
// Season three is a sequel to season two
// Season three is NOT a sequel to season one since it is not direct
model anime_relations {
    anime_id    Int
    relation_id Int
    relation    Relation

    @@id([anime_id, relation_id])
}

// Used for generating a series of animes
// A series is a group of animes that are related to each other
// the series ID is the first anime in the series
// normall season one but can be setup to be the "watch order" instead 
// Import defaults to the watch order
model anime_series {
    series_id    Int // refers to the first anime in the seris, this is what we are using to group animes together
    series       animes @relation(name: "series", fields: [series_id], references: [id])
    anime_id     Int
    anime        animes @relation(name: "anime", fields: [anime_id], references: [id])
    series_order Int

    @@id([series_id, anime_id])
}

model anime_users {
    user_id        String
    anime_id       Int
    status         Status   @default(PLAN_TO_WATCH)
    watch_priority Int      @default(0) // 0 = not set
    created_at     DateTime @default(now())
    updated_at     DateTime @default(now())

    user   users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    animes animes? @relation(fields: [anime_id], references: [id])

    @@id([user_id, anime_id])
    @@index([user_id], name: "user_id")
    @@index([anime_id], name: "anime_id")
}

model sessions {
    id         String   @id
    user_id    String
    expires_at DateTime
    created_at DateTime @default(now())

    user users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([user_id], name: "user_id")
}
